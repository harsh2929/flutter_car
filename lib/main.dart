// lib/main.dart

import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:provider/provider.dart';
import 'firebase_options.dart'; // Generated by FlutterFire CLI
import 'screens/auth/login_screen.dart';
import 'screens/home_screen.dart';
import 'screens/auth/signup_screen.dart'; // Ensure you have a SignupScreen
import 'screens/car/car_create_screen.dart'; // Import the create car screen
import 'services/auth_service.dart';
import 'services/firestore_service.dart';
import 'utils/constants.dart'; // Contains AppColors and AppStrings
import 'utils/theme.dart'; // Contains appTheme
// import 'screens/car/car_create_screen.dart'; // Import the create car screen

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform, // Initialize with options
  );
  runApp(CarManagementApp());
}

class CarManagementApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MultiProvider(
      providers: [
        Provider<AuthService>(create: (_) => AuthService()),
        Provider<FirestoreService>(create: (_) => FirestoreService()),
        // StreamProvider to listen to authentication state changes
        StreamProvider<User?>(
          create: (context) => context.read<AuthService>().authStateChanges,
          initialData: null,
        ),
        // Add other providers here if needed
      ],
      child: MaterialApp(
        title: AppStrings.appName,
        theme: appTheme,
        debugShowCheckedModeBanner: false,
        home: AuthWrapper(),
        routes: {
          '/addCar': (context) => CarCreateScreen(), // Define the /addCar route
          // Add other named routes here if needed
        },
      ),
    );
  }
}

class AuthWrapper extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    final user = context.watch<User?>();
    if (user != null) {
      return HomeScreen();
    }
    return LoginScreen();
  }
}
